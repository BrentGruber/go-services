version: '3.8'

services:
  traefik:
    image: "traefik:v2.4"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - cordy

  redis:
    image: redis
    ports:
      - 6379:6379
    networks:
      - cordy

  asynqmon:
    image: hibiken/asynqmon
    command:
      - "--redis-addr=redis:6379"
    networks:
      - cordy
    ports:
      - 8082:8080
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.adminer.loadbalancer.server.port=8080"
      - "traefik.http.routers.adminer.rule=Host(`asynqmon.localhost`)"
      - "traefik.http.routers.adminer.entrypoints=web"


  db:
    image: postgres
    volumes:
      - ./db/init:/docker-entrypoint-initdb.d/
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - cordy

  adminer:
    image: adminer
    networks:
      - cordy
    ports:
      - 8081:8080
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.adminer.loadbalancer.server.port=8080"
      - "traefik.http.routers.adminer.rule=Host(`adminer.localhost`)"
      - "traefik.http.routers.adminer.entrypoints=web"

networks:
  cordy:
    driver: bridge